[0.156s] Invoking command in '/home/chotu/ros2_ws/src/ENPM_808X_FINAL/ros2_aruco': AMENT_PREFIX_PATH=/home/chotu/ros2_ws/src/ENPM_808X_FINAL/install/ros2_aruco:/home/chotu/ros2_ws/src/ENPM_808X_FINAL/install/tb3:/home/chotu/ros2_ws/src/ENPM_808X_FINAL/install/tutorial_interfaces:/opt/ros/humble PYTEST_ADDOPTS=--tb=short --junit-xml=/home/chotu/ros2_ws/src/ENPM_808X_FINAL/build/ros2_aruco/pytest.xml --junit-prefix=ros2_aruco -o cache_dir=/home/chotu/ros2_ws/src/ENPM_808X_FINAL/build/ros2_aruco/.pytest_cache PYTHONPATH=/home/chotu/ros2_ws/src/ENPM_808X_FINAL/install/ros2_aruco/lib/python3.10/site-packages:/home/chotu/ros2_ws/src/ENPM_808X_FINAL/install/tb3/local/lib/python3.10/dist-packages:/home/chotu/ros2_ws/src/ENPM_808X_FINAL/install/tutorial_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages /usr/bin/python3 -m pytest
[0.373s] [1m============================= test session starts ==============================[0m
[0.373s] platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0
[0.376s] cachedir: /home/chotu/ros2_ws/src/ENPM_808X_FINAL/build/ros2_aruco/.pytest_cache
[0.376s] rootdir: /home/chotu/ros2_ws/src/ENPM_808X_FINAL/ros2_aruco
[0.376s] plugins: launch-testing-ros-0.19.3, ament-copyright-0.12.4, launch-testing-1.0.3, ament-flake8-0.12.4, ament-lint-0.12.4, ament-pep257-0.12.4, ament-xmllint-0.12.4, colcon-core-0.11.0
[0.443s] [1mcollecting ... [0m[1m
[0.443s] collected 3 items                                                              [0m
[0.443s] 
[0.522s] test/test_copyright.py [31mF[0m[31m                                                 [ 33%][0m
[0.755s] test/test_flake8.py [31mF[0m[31m                                                    [ 66%][0m
[0.848s] test/test_pep257.py [31mF[0m[31m                                                    [100%][0m
[0.848s] 
[0.848s] =================================== FAILURES ===================================
[0.848s] [31m[1m________________________________ test_copyright ________________________________[0m
[0.848s] [1m[31mtest/test_copyright.py[0m:23: in test_copyright
[0.875s]     [94massert[39;49;00m rc == [94m0[39;49;00m, [33m'[39;49;00m[33mFound errors[39;49;00m[33m'[39;49;00m
[0.875s] [1m[31mE   AssertionError: Found errors[0m
[0.875s] [1m[31mE   assert 1 == 0[0m
[0.875s] ----------------------------- Captured stderr call -----------------------------
[0.875s] launch/usb_camera_node.launch.py: could not find copyright notice
[0.875s] ros2_aruco/aruco_generate_marker.py: could not find copyright notice
[0.875s] ros2_aruco/aruco_node.py: could not find copyright notice
[0.875s] ros2_aruco/transformations.py: could not find copyright notice
[0.876s] 4 errors, checked 8 files
[0.876s] [31m[1m_________________________________ test_flake8 __________________________________[0m
[0.876s] [1m[31mtest/test_flake8.py[0m:23: in test_flake8
[0.876s]     [94massert[39;49;00m rc == [94m0[39;49;00m, [33m'[39;49;00m[33mFound errors[39;49;00m[33m'[39;49;00m
[0.876s] [1m[31mE   AssertionError: Found errors[0m
[0.876s] [1m[31mE   assert 1 == 0[0m
[0.876s] ----------------------------- Captured stdout call -----------------------------
[0.876s] 
[0.876s] ./ros2_aruco/transformations.py:59:31: W605 invalid escape sequence '\*'
[0.877s] """Homogeneous Transformation Matrices and Quaternions.
[0.877s] 
[0.877s] A library for calculating 4x4 matrices for translating, rotating, reflecting,
[0.877s] scaling, shearing, projecting, orthogonalizing, and superimposing arrays of
[0.877s] 3D homogeneous coordinates as well as for converting between rotation matrices,
[0.877s] Euler angles, and quaternions. Also includes an Arcball control object and
[0.878s] functions to decompose transformation matrices.
[0.878s] 
[0.878s] :Authors:
[0.878s]   `Christoph Gohlke <http://www.lfd.uci.edu/~gohlke/>`__,
[0.878s]   Laboratory for Fluorescence Dynamics, University of California, Irvine
[0.878s] 
[0.878s] :Version: 20090418
[0.878s] 
[0.878s] Requirements
[0.878s] ------------
[0.878s] 
[0.878s] * `Python 2.6 <http://www.python.org>`__
[0.878s] * `Numpy 1.3 <http://numpy.scipy.org>`__
[0.878s] * `transformations.c 20090418 <http://www.lfd.uci.edu/~gohlke/>`__
[0.878s]   (optional implementation of some functions in C)
[0.878s] 
[0.878s] Notes
[0.878s] -----
[0.879s] 
[0.879s] Matrices (M) can be inverted using numpy.linalg.inv(M), concatenated using
[0.879s] numpy.dot(M0, M1), or used to transform homogeneous coordinates (v) using
[0.879s] numpy.dot(M, v) for shape (4, \*) "point of arrays", respectively
[0.879s] numpy.dot(v, M.T) for shape (\*, 4) "array of points".
[0.879s] 
[0.879s] Calculations are carried out with numpy.float64 precision.
[0.879s] 
[0.879s] This Python implementation is not optimized for speed.
[0.879s] 
[0.879s] Vector, point, quaternion, and matrix function arguments are expected to be
[0.879s] "array like", i.e. tuple, list, or numpy arrays.
[0.879s] 
[0.879s] Return types are numpy arrays unless specified otherwise.
[0.879s] 
[0.879s] Angles are in radians unless specified otherwise.
[0.879s] 
[0.879s] Quaternions ix+jy+kz+w are represented as [x, y, z, w].
[0.879s] 
[0.879s] Use the transpose of transformation matrices for OpenGL glMultMatrixd().
[0.879s] 
[0.879s] A triple of Euler angles can be applied/interpreted in 24 ways, which can
[0.879s] be specified using a 4 character string or encoded 4-tuple:
[0.879s] 
[0.879s]   *Axes 4-string*: e.g. 'sxyz' or 'ryxy'
[0.880s] 
[0.880s]   - first character : rotations are applied to 's'tatic or 'r'otating frame
[0.880s]   - remaining characters : successive rotation axis 'x', 'y', or 'z'
[0.880s] 
[0.880s]   *Axes 4-tuple*: e.g. (0, 0, 0, 0) or (1, 1, 1, 1)
[0.880s] 
[0.880s]   - inner axis: code of axis ('x':0, 'y':1, 'z':2) of rightmost matrix.
[0.880s]   - parity : even (0) if inner axis 'x' is followed by 'y', 'y' is followed
[0.880s]     by 'z', or 'z' is followed by 'x'. Otherwise odd (1).
[0.880s]   - repetition : first and last axis are same (1) or different (0).
[0.880s]   - frame : rotations are applied to static (0) or rotating (1) frame.
[0.880s] 
[0.880s] References
[0.880s] ----------
[0.880s] 
[0.880s] (1)  Matrices and transformations. Ronald Goldman.
[0.880s]      In "Graphics Gems I", pp 472-475. Morgan Kaufmann, 1990.
[0.880s] (2)  More matrices and transformations: shear and pseudo-perspective.
[0.880s]      Ronald Goldman. In "Graphics Gems II", pp 320-323. Morgan Kaufmann, 1991.
[0.880s] (3)  Decomposing a matrix into simple transformations. Spencer Thomas.
[0.880s]      In "Graphics Gems II", pp 320-323. Morgan Kaufmann, 1991.
[0.881s] (4)  Recovering the data from the transformation matrix. Ronald Goldman.
[0.881s]      In "Graphics Gems II", pp 324-331. Morgan Kaufmann, 1991.
[0.881s] (5)  Euler angle conversion. Ken Shoemake.
[0.881s]      In "Graphics Gems IV", pp 222-229. Morgan Kaufmann, 1994.
[0.881s] (6)  Arcball rotation control. Ken Shoemake.
[0.881s]      In "Graphics Gems IV", pp 175-192. Morgan Kaufmann, 1994.
[0.881s] (7)  Representing attitude: Euler angles, unit quaternions, and rotation
[0.881s]      vectors. James Diebel. 2006.
[0.881s] (8)  A discussion of the solution for the best rotation to relate two sets
[0.881s]      of vectors. W Kabsch. Acta Cryst. 1978. A34, 827-828.
[0.881s] (9)  Closed-form solution of absolute orientation using unit quaternions.
[0.881s]      BKP Horn. J Opt Soc Am A. 1987. 4(4), 629-642.
[0.881s] (10) Quaternions. Ken Shoemake.
[0.881s]      http://www.sfu.ca/~jwa3/cmpt461/files/quatut.pdf
[0.881s] (11) From quaternion to matrix and back. JMP van Waveren. 2005.
[0.881s]      http://www.intel.com/cd/ids/developer/asmo-na/eng/293748.htm
[0.881s] (12) Uniform random rotations. Ken Shoemake.
[0.881s]      In "Graphics Gems III", pp 124-132. Morgan Kaufmann, 1992.
[0.881s] 
[0.881s] 
[0.881s] Examples
[0.881s] --------
[0.881s] 
[0.881s] >>> alpha, beta, gamma = 0.123, -1.234, 2.345
[0.881s] >>> origin, xaxis, yaxis, zaxis = (0, 0, 0), (1, 0, 0), (0, 1, 0), (0, 0, 1)
[0.881s] >>> I = identity_matrix()
[0.882s] >>> Rx = rotation_matrix(alpha, xaxis)
[0.882s] >>> Ry = rotation_matrix(beta, yaxis)
[0.882s] >>> Rz = rotation_matrix(gamma, zaxis)
[0.882s] >>> R = concatenate_matrices(Rx, Ry, Rz)
[0.882s] >>> euler = euler_from_matrix(R, 'rxyz')
[0.882s] >>> numpy.allclose([alpha, beta, gamma], euler)
[0.882s] True
[0.882s] >>> Re = euler_matrix(alpha, beta, gamma, 'rxyz')
[0.882s] >>> is_same_transform(R, Re)
[0.882s] True
[0.882s] >>> al, be, ga = euler_from_matrix(Re, 'rxyz')
[0.882s] >>> is_same_transform(Re, euler_matrix(al, be, ga, 'rxyz'))
[0.882s] True
[0.882s] >>> qx = quaternion_about_axis(alpha, xaxis)
[0.882s] >>> qy = quaternion_about_axis(beta, yaxis)
[0.882s] >>> qz = quaternion_about_axis(gamma, zaxis)
[0.882s] >>> q = quaternion_multiply(qx, qy)
[0.882s] >>> q = quaternion_multiply(q, qz)
[0.882s] >>> Rq = quaternion_matrix(q)
[0.882s] >>> is_same_transform(R, Rq)
[0.882s] True
[0.882s] >>> S = scale_matrix(1.23, origin)
[0.882s] >>> T = translation_matrix((1, 2, 3))
[0.882s] >>> Z = shear_matrix(beta, xaxis, origin, zaxis)
[0.883s] >>> R = random_rotation_matrix(numpy.random.rand(3))
[0.883s] >>> M = concatenate_matrices(T, R, Z, S)
[0.883s] >>> scale, shear, angles, trans, persp = decompose_matrix(M)
[0.883s] >>> numpy.allclose(scale, 1.23)
[0.883s] True
[0.883s] >>> numpy.allclose(trans, (1, 2, 3))
[0.883s] True
[0.883s] >>> numpy.allclose(shear, (0, math.tan(beta), 0))
[0.883s] True
[0.883s] >>> is_same_transform(R, euler_matrix(axes='sxyz', *angles))
[0.883s] True
[0.883s] >>> M1 = compose_matrix(scale, shear, angles, trans, persp)
[0.883s] >>> is_same_transform(M, M1)
[0.883s] True
[0.883s] 
[0.883s] """
[0.883s]                               ^
[0.883s] 
[0.883s] ./ros2_aruco/transformations.py:60:30: W605 invalid escape sequence '\*'
[0.883s] """Homogeneous Transformation Matrices and Quaternions.
[0.883s] 
[0.883s] A library for calculating 4x4 matrices for translating, rotating, reflecting,
[0.883s] scaling, shearing, projecting, orthogonalizing, and superimposing arrays of
[0.883s] 3D homogeneous coordinates as well as for converting between rotation matrices,
[0.883s] Euler angles, and quaternions. Also includes an Arcball control object and
[0.884s] functions to decompose transformation matrices.
[0.884s] 
[0.884s] :Authors:
[0.884s]   `Christoph Gohlke <http://www.lfd.uci.edu/~gohlke/>`__,
[0.884s]   Laboratory for Fluorescence Dynamics, University of California, Irvine
[0.884s] 
[0.884s] :Version: 20090418
[0.884s] 
[0.884s] Requirements
[0.884s] ------------
[0.884s] 
[0.884s] * `Python 2.6 <http://www.python.org>`__
[0.884s] * `Numpy 1.3 <http://numpy.scipy.org>`__
[0.884s] * `transformations.c 20090418 <http://www.lfd.uci.edu/~gohlke/>`__
[0.884s]   (optional implementation of some functions in C)
[0.884s] 
[0.884s] Notes
[0.884s] -----
[0.884s] 
[0.884s] Matrices (M) can be inverted using numpy.linalg.inv(M), concatenated using
[0.884s] numpy.dot(M0, M1), or used to transform homogeneous coordinates (v) using
[0.884s] numpy.dot(M, v) for shape (4, \*) "point of arrays", respectively
[0.884s] numpy.dot(v, M.T) for shape (\*, 4) "array of points".
[0.884s] 
[0.884s] Calculations are carried out with numpy.float64 precision.
[0.884s] 
[0.885s] This Python implementation is not optimized for speed.
[0.885s] 
[0.885s] Vector, point, quaternion, and matrix function arguments are expected to be
[0.885s] "array like", i.e. tuple, list, or numpy arrays.
[0.885s] 
[0.885s] Return types are numpy arrays unless specified otherwise.
[0.885s] 
[0.885s] Angles are in radians unless specified otherwise.
[0.885s] 
[0.885s] Quaternions ix+jy+kz+w are represented as [x, y, z, w].
[0.885s] 
[0.885s] Use the transpose of transformation matrices for OpenGL glMultMatrixd().
[0.885s] 
[0.885s] A triple of Euler angles can be applied/interpreted in 24 ways, which can
[0.885s] be specified using a 4 character string or encoded 4-tuple:
[0.885s] 
[0.885s]   *Axes 4-string*: e.g. 'sxyz' or 'ryxy'
[0.885s] 
[0.885s]   - first character : rotations are applied to 's'tatic or 'r'otating frame
[0.885s]   - remaining characters : successive rotation axis 'x', 'y', or 'z'
[0.885s] 
[0.885s]   *Axes 4-tuple*: e.g. (0, 0, 0, 0) or (1, 1, 1, 1)
[0.885s] 
[0.885s]   - inner axis: code of axis ('x':0, 'y':1, 'z':2) of rightmost matrix.
[0.885s]   - parity : even (0) if inner axis 'x' is followed by 'y', 'y' is followed
[0.886s]     by 'z', or 'z' is followed by 'x'. Otherwise odd (1).
[0.886s]   - repetition : first and last axis are same (1) or different (0).
[0.886s]   - frame : rotations are applied to static (0) or rotating (1) frame.
[0.886s] 
[0.886s] References
[0.886s] ----------
[0.886s] 
[0.886s] (1)  Matrices and transformations. Ronald Goldman.
[0.886s]      In "Graphics Gems I", pp 472-475. Morgan Kaufmann, 1990.
[0.886s] (2)  More matrices and transformations: shear and pseudo-perspective.
[0.886s]      Ronald Goldman. In "Graphics Gems II", pp 320-323. Morgan Kaufmann, 1991.
[0.886s] (3)  Decomposing a matrix into simple transformations. Spencer Thomas.
[0.886s]      In "Graphics Gems II", pp 320-323. Morgan Kaufmann, 1991.
[0.886s] (4)  Recovering the data from the transformation matrix. Ronald Goldman.
[0.886s]      In "Graphics Gems II", pp 324-331. Morgan Kaufmann, 1991.
[0.886s] (5)  Euler angle conversion. Ken Shoemake.
[0.886s]      In "Graphics Gems IV", pp 222-229. Morgan Kaufmann, 1994.
[0.886s] (6)  Arcball rotation control. Ken Shoemake.
[0.886s]      In "Graphics Gems IV", pp 175-192. Morgan Kaufmann, 1994.
[0.886s] (7)  Representing attitude: Euler angles, unit quaternions, and rotation
[0.886s]      vectors. James Diebel. 2006.
[0.886s] (8)  A discussion of the solution for the best rotation to relate two sets
[0.886s]      of vectors. W Kabsch. Acta Cryst. 1978. A34, 827-828.
[0.886s] (9)  Closed-form solution of absolute orientation using unit quaternions.
[0.886s]      BKP Horn. J Opt Soc Am A. 1987. 4(4), 629-642.
[0.886s] (10) Quaternions. Ken Shoemake.
[0.887s]      http://www.sfu.ca/~jwa3/cmpt461/files/quatut.pdf
[0.887s] (11) From quaternion to matrix and back. JMP van Waveren. 2005.
[0.887s]      http://www.intel.com/cd/ids/developer/asmo-na/eng/293748.htm
[0.887s] (12) Uniform random rotations. Ken Shoemake.
[0.887s]      In "Graphics Gems III", pp 124-132. Morgan Kaufmann, 1992.
[0.887s] 
[0.887s] 
[0.887s] Examples
[0.887s] --------
[0.887s] 
[0.887s] >>> alpha, beta, gamma = 0.123, -1.234, 2.345
[0.887s] >>> origin, xaxis, yaxis, zaxis = (0, 0, 0), (1, 0, 0), (0, 1, 0), (0, 0, 1)
[0.887s] >>> I = identity_matrix()
[0.887s] >>> Rx = rotation_matrix(alpha, xaxis)
[0.887s] >>> Ry = rotation_matrix(beta, yaxis)
[0.887s] >>> Rz = rotation_matrix(gamma, zaxis)
[0.887s] >>> R = concatenate_matrices(Rx, Ry, Rz)
[0.887s] >>> euler = euler_from_matrix(R, 'rxyz')
[0.887s] >>> numpy.allclose([alpha, beta, gamma], euler)
[0.887s] True
[0.887s] >>> Re = euler_matrix(alpha, beta, gamma, 'rxyz')
[0.887s] >>> is_same_transform(R, Re)
[0.887s] True
[0.887s] >>> al, be, ga = euler_from_matrix(Re, 'rxyz')
[0.887s] >>> is_same_transform(Re, euler_matrix(al, be, ga, 'rxyz'))
[0.888s] True
[0.888s] >>> qx = quaternion_about_axis(alpha, xaxis)
[0.888s] >>> qy = quaternion_about_axis(beta, yaxis)
[0.888s] >>> qz = quaternion_about_axis(gamma, zaxis)
[0.888s] >>> q = quaternion_multiply(qx, qy)
[0.888s] >>> q = quaternion_multiply(q, qz)
[0.888s] >>> Rq = quaternion_matrix(q)
[0.888s] >>> is_same_transform(R, Rq)
[0.888s] True
[0.888s] >>> S = scale_matrix(1.23, origin)
[0.888s] >>> T = translation_matrix((1, 2, 3))
[0.888s] >>> Z = shear_matrix(beta, xaxis, origin, zaxis)
[0.888s] >>> R = random_rotation_matrix(numpy.random.rand(3))
[0.888s] >>> M = concatenate_matrices(T, R, Z, S)
[0.888s] >>> scale, shear, angles, trans, persp = decompose_matrix(M)
[0.888s] >>> numpy.allclose(scale, 1.23)
[0.888s] True
[0.888s] >>> numpy.allclose(trans, (1, 2, 3))
[0.888s] True
[0.888s] >>> numpy.allclose(shear, (0, math.tan(beta), 0))
[0.888s] True
[0.888s] >>> is_same_transform(R, euler_matrix(axes='sxyz', *angles))
[0.888s] True
[0.888s] >>> M1 = compose_matrix(scale, shear, angles, trans, persp)
[0.888s] >>> is_same_transform(M, M1)
[0.888s] True
[0.889s] 
[0.889s] """
[0.889s]                              ^
[0.889s] 
[0.889s] ./ros2_aruco/transformations.py:680:9: E741 ambiguous variable name 'l'
[0.889s]         l = vector_norm(n)
[0.889s]         ^
[0.889s] 
[0.889s] ./ros2_aruco/transformations.py:778:9: E265 block comment should start with '# '
[0.889s]         #angles[0] = math.atan2(row[1, 0], row[1, 1])
[0.889s]         ^
[0.889s] 
[0.889s] ./ros2_aruco/transformations.py:869:29: W605 invalid escape sequence '\*'
[0.889s]     """Return matrix to transform given vector set into second vector set.
[0.889s] 
[0.889s]     v0 and v1 are shape (3, \*) or (4, \*) arrays of at least 3 vectors.
[0.889s] 
[0.889s]     If usesvd is True, the weighted sum of squared deviations (RMSD) is
[0.889s]     minimized according to the algorithm by W. Kabsch [8]. Otherwise the
[0.889s]     quaternion based algorithm by B. Horn [9] is used (slower when using
[0.889s]     this Python implementation).
[0.889s] 
[0.889s]     The returned matrix performs rotation, translation and uniform scaling
[0.889s]     (if specified).
[0.889s] 
[0.890s]     >>> v0 = numpy.random.rand(3, 10)
[0.890s]     >>> M = superimposition_matrix(v0, v0)
[0.890s]     >>> numpy.allclose(M, numpy.identity(4))
[0.890s]     True
[0.890s]     >>> R = random_rotation_matrix(numpy.random.random(3))
[0.890s]     >>> v0 = ((1,0,0), (0,1,0), (0,0,1), (1,1,1))
[0.890s]     >>> v1 = numpy.dot(R, v0)
[0.890s]     >>> M = superimposition_matrix(v0, v1)
[0.890s]     >>> numpy.allclose(v1, numpy.dot(M, v0))
[0.890s]     True
[0.890s]     >>> v0 = (numpy.random.rand(4, 100) - 0.5) * 20.0
[0.890s]     >>> v0[3] = 1.0
[0.890s]     >>> v1 = numpy.dot(R, v0)
[0.890s]     >>> M = superimposition_matrix(v0, v1)
[0.890s]     >>> numpy.allclose(v1, numpy.dot(M, v0))
[0.890s]     True
[0.890s]     >>> S = scale_matrix(random.random())
[0.890s]     >>> T = translation_matrix(numpy.random.random(3)-0.5)
[0.890s]     >>> M = concatenate_matrices(T, R, S)
[0.890s]     >>> v1 = numpy.dot(M, v0)
[0.890s]     >>> v0[:3] += numpy.random.normal(0.0, 1e-9, 300).reshape(3, -1)
[0.890s]     >>> M = superimposition_matrix(v0, v1, scaling=True)
[0.890s]     >>> numpy.allclose(v1, numpy.dot(M, v0))
[0.890s]     True
[0.890s]     >>> M = superimposition_matrix(v0, v1, scaling=True, usesvd=False)
[0.891s]     >>> numpy.allclose(v1, numpy.dot(M, v0))
[0.891s]     True
[0.891s]     >>> v = numpy.empty((4, 100, 3), dtype=numpy.float64)
[0.891s]     >>> v[:, :, 0] = v0
[0.891s]     >>> M = superimposition_matrix(v0, v1, scaling=True, usesvd=False)
[0.891s]     >>> numpy.allclose(v1, numpy.dot(M, v[:, :, 0]))
[0.891s]     True
[0.891s] 
[0.891s]     """
[0.891s]                             ^
[0.891s] 
[0.891s] ./ros2_aruco/transformations.py:869:40: W605 invalid escape sequence '\*'
[0.891s]     """Return matrix to transform given vector set into second vector set.
[0.891s] 
[0.891s]     v0 and v1 are shape (3, \*) or (4, \*) arrays of at least 3 vectors.
[0.891s] 
[0.891s]     If usesvd is True, the weighted sum of squared deviations (RMSD) is
[0.891s]     minimized according to the algorithm by W. Kabsch [8]. Otherwise the
[0.891s]     quaternion based algorithm by B. Horn [9] is used (slower when using
[0.891s]     this Python implementation).
[0.891s] 
[0.891s]     The returned matrix performs rotation, translation and uniform scaling
[0.891s]     (if specified).
[0.891s] 
[0.891s]     >>> v0 = numpy.random.rand(3, 10)
[0.891s]     >>> M = superimposition_matrix(v0, v0)
[0.892s]     >>> numpy.allclose(M, numpy.identity(4))
[0.892s]     True
[0.892s]     >>> R = random_rotation_matrix(numpy.random.random(3))
[0.892s]     >>> v0 = ((1,0,0), (0,1,0), (0,0,1), (1,1,1))
[0.892s]     >>> v1 = numpy.dot(R, v0)
[0.892s]     >>> M = superimposition_matrix(v0, v1)
[0.892s]     >>> numpy.allclose(v1, numpy.dot(M, v0))
[0.892s]     True
[0.892s]     >>> v0 = (numpy.random.rand(4, 100) - 0.5) * 20.0
[0.892s]     >>> v0[3] = 1.0
[0.892s]     >>> v1 = numpy.dot(R, v0)
[0.892s]     >>> M = superimposition_matrix(v0, v1)
[0.892s]     >>> numpy.allclose(v1, numpy.dot(M, v0))
[0.892s]     True
[0.892s]     >>> S = scale_matrix(random.random())
[0.892s]     >>> T = translation_matrix(numpy.random.random(3)-0.5)
[0.892s]     >>> M = concatenate_matrices(T, R, S)
[0.892s]     >>> v1 = numpy.dot(M, v0)
[0.892s]     >>> v0[:3] += numpy.random.normal(0.0, 1e-9, 300).reshape(3, -1)
[0.892s]     >>> M = superimposition_matrix(v0, v1, scaling=True)
[0.892s]     >>> numpy.allclose(v1, numpy.dot(M, v0))
[0.892s]     True
[0.892s]     >>> M = superimposition_matrix(v0, v1, scaling=True, usesvd=False)
[0.892s]     >>> numpy.allclose(v1, numpy.dot(M, v0))
[0.893s]     True
[0.893s]     >>> v = numpy.empty((4, 100, 3), dtype=numpy.float64)
[0.893s]     >>> v[:, :, 0] = v0
[0.893s]     >>> M = superimposition_matrix(v0, v1, scaling=True, usesvd=False)
[0.893s]     >>> numpy.allclose(v1, numpy.dot(M, v[:, :, 0]))
[0.893s]     True
[0.893s] 
[0.893s]     """
[0.893s]                                        ^
[0.893s] 
[0.893s] ./ros2_aruco/transformations.py:1429:37: E712 comparison to True should be 'if cond is True:' or 'if cond:'
[0.893s]         self._constrain = constrain == True
[0.893s]                                     ^
[0.893s] 
[0.893s] ./ros2_aruco/aruco_node.py:66:36: E721 do not compare types, use 'isinstance()'
[0.893s]             if type(dictionary_id) != type(cv2.aruco.DICT_5X5_100):
[0.893s]                                    ^
[0.893s] 
[0.893s] ./ros2_aruco/aruco_node.py:118:1: W293 blank line contains whitespace
[0.893s]             
[0.893s] ^
[0.893s] 
[0.893s] ./ros2_aruco/aruco_node.py:119:1: W293 blank line contains whitespace
[0.893s]             
[0.893s] ^
[0.893s] 
[0.894s] ./ros2_aruco/aruco_node.py:120:9: E303 too many blank lines (2)
[0.894s]         markers.header.stamp = img_msg.header.stamp
[0.894s]         ^
[0.894s] 
[0.894s] ./ros2_aruco/aruco_node.py:130:100: E501 line too long (107 > 99 characters)
[0.894s]                                                                       self.marker_size, self.intrinsic_mat,
[0.894s]                                                                                                    ^
[0.894s] 
[0.894s] ./ros2_aruco/aruco_node.py:134:100: E501 line too long (104 > 99 characters)
[0.894s]                                                                    self.marker_size, self.intrinsic_mat,
[0.894s] [33m=============================== warnings summary ===============================[0m
[0.894s] test/test_flake8.py::test_flake8
[0.894s] test/test_flake8.py::test_flake8
[0.894s]   Warning: SelectableGroups dict interface is deprecated. Use select.
[0.894s] 
[0.894s] test/test_pep257.py: 25 warnings
[0.894s]   Warning: invalid escape sequence '\*'
[0.894s] 
[0.894s] -- Docs: https://docs.pytest.org/en/stable/warnings.html
[0.894s]                                                                                                    ^
[0.894s] 
[0.894s] ./launch/usb_camera_node.launch.py:6:1: F401 'launch.LaunchContext' imported but unused
[0.894s] from launch import LaunchContext
[0.894s] ^
[0.895s] 
[0.895s] ./launch/usb_camera_node.launch.py:7:1: F401 'launch.actions.SetEnvironmentVariable' imported but unused
[0.895s] from launch.actions import SetEnvironmentVariable
[0.895s] ^
[0.895s] 
[0.895s] ./launch/usb_camera_node.launch.py:11:1: E303 too many blank lines (3)
[0.895s] def generate_launch_description():
[0.895s] ^
[0.895s] 
[0.895s] ./launch/usb_camera_node.launch.py:12:19: W291 trailing whitespace
[0.895s]     ns = "/camera" 
[0.895s]                   ^
[0.895s] 
[0.895s] ./launch/usb_camera_node.launch.py:19:100: E501 line too long (107 > 99 characters)
[0.895s]             parameters=[{"camera_calibration_file": "file:///home/spragunr/.ros/camera_info/camera.yaml"}],
[0.895s]                                                                                                    ^
[0.895s] 
[0.895s] ./launch/usb_camera_node.launch.py:27:27: E231 missing whitespace after ','
[0.895s]             arguments=["0","0","0","0","0","0","world","camera"],
[0.895s]                           ^
[0.895s] 
[0.895s] ./launch/usb_camera_node.launch.py:27:31: E231 missing whitespace after ','
[0.895s]             arguments=["0","0","0","0","0","0","world","camera"],
[0.896s]                               ^
[0.896s] 
[0.896s] ./launch/usb_camera_node.launch.py:27:35: E231 missing whitespace after ','
[0.896s]             arguments=["0","0","0","0","0","0","world","camera"],
[0.896s]                                   ^
[0.896s] 
[0.896s] ./launch/usb_camera_node.launch.py:27:39: E231 missing whitespace after ','
[0.896s]             arguments=["0","0","0","0","0","0","world","camera"],
[0.896s]                                       ^
[0.896s] 
[0.896s] ./launch/usb_camera_node.launch.py:27:43: E231 missing whitespace after ','
[0.896s]             arguments=["0","0","0","0","0","0","world","camera"],
[0.896s]                                           ^
[0.896s] 
[0.896s] ./launch/usb_camera_node.launch.py:27:47: E231 missing whitespace after ','
[0.896s]             arguments=["0","0","0","0","0","0","world","camera"],
[0.896s]                                               ^
[0.896s] 
[0.896s] ./launch/usb_camera_node.launch.py:27:55: E231 missing whitespace after ','
[0.896s]             arguments=["0","0","0","0","0","0","world","camera"],
[0.896s]                                                       ^
[0.896s] 
[0.896s] ./launch/usb_camera_node.launch.py:32:1: W293 blank line contains whitespace
[0.896s]     
[0.897s] ^
[0.897s] 
[0.897s] 7     E231 missing whitespace after ','
[0.897s] 1     E265 block comment should start with '# '
[0.897s] 2     E303 too many blank lines (3)
[0.897s] 3     E501 line too long (107 > 99 characters)
[0.897s] 1     E712 comparison to True should be 'if cond is True:' or 'if cond:'
[0.897s] 1     E721 do not compare types, use 'isinstance()'
[0.897s] 1     E741 ambiguous variable name 'l'
[0.897s] 2     F401 'launch.LaunchContext' imported but unused
[0.897s] 1     W291 trailing whitespace
[0.897s] 3     W293 blank line contains whitespace
[0.897s] 4     W605 invalid escape sequence '\*'
[0.897s] 
[0.897s] 9 files checked
[0.897s] 26 errors
[0.897s] 
[0.897s] 'E'-type errors: 16
[0.897s] 'F'-type errors: 2
[0.897s] 'W'-type errors: 8
[0.898s] 
[0.898s] Checked files:
[0.898s] 
[0.898s] * ./setup.py
[0.898s] * ./ros2_aruco/__init__.py
[0.898s] * ./ros2_aruco/aruco_generate_marker.py
[0.898s] * ./ros2_aruco/transformations.py
[0.898s] * ./ros2_aruco/aruco_node.py
[0.898s] * ./launch/usb_camera_node.launch.py
[0.898s] * ./test/test_flake8.py
[0.898s] * ./test/test_pep257.py
[0.898s] * ./test/test_copyright.py
[0.898s] ----------------------------- Captured stderr call -----------------------------
[0.898s] option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future
[0.898s] [31m[1m_________________________________ test_pep257 __________________________________[0m
[0.898s] [1m[31mtest/test_pep257.py[0m:23: in test_pep257
[0.898s]     [94massert[39;49;00m rc == [94m0[39;49;00m, [33m'[39;49;00m[33mFound code style errors / warnings[39;49;00m[33m'[39;49;00m
[0.898s] [1m[31mE   AssertionError: Found code style errors / warnings[0m
[0.898s] [1m[31mE   assert 1 == 0[0m
[0.898s] ----------------------------- Captured stdout call -----------------------------
[0.898s] checking ./launch/usb_camera_node.launch.py
[0.898s] checking ./ros2_aruco/__init__.py
[0.898s] checking ./ros2_aruco/aruco_generate_marker.py
[0.898s] ./ros2_aruco/aruco_generate_marker.py:15 in public class `CustomFormatter`: D204: 1 blank line required after class docstring (found 0)
[0.899s] ./ros2_aruco/aruco_generate_marker.py:15 in public class `CustomFormatter`: D210: No whitespaces allowed surrounding docstring text
[0.899s] checking ./ros2_aruco/aruco_node.py
[0.899s] ./ros2_aruco/aruco_node.py:1 at module level: D407: Missing dashed underline after section ('Parameters')
[0.899s] ./ros2_aruco/aruco_node.py:1 at module level: D406: Section name should end with a newline ('Parameters', not 'Parameters:')
[0.899s] checking ./ros2_aruco/transformations.py
[0.899s] ./ros2_aruco/transformations.py:32 at module level: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:32 at module level: D301: Use r""" if any backslashes in a docstring
[0.899s] ./ros2_aruco/transformations.py:32 at module level: D412: No blank lines allowed between a section header and its content ('Notes')
[0.899s] ./ros2_aruco/transformations.py:32 at module level: D412: No blank lines allowed between a section header and its content ('References')
[0.899s] ./ros2_aruco/transformations.py:32 at module level: D412: No blank lines allowed between a section header and its content ('Examples')
[0.899s] ./ros2_aruco/transformations.py:181 in public function `identity_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:196 in public function `translation_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:209 in public function `translation_from_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:221 in public function `reflection_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:247 in public function `reflection_from_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:276 in public function `rotation_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:320 in public function `rotation_from_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:360 in public function `scale_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:397 in public function `scale_from_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:439 in public function `projection_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:500 in public function `projection_from_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:573 in public function `clip_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:625 in public function `shear_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:656 in public function `shear_from_matrix`: D213: Multi-line docstring summary should start at the second line
[0.899s] ./ros2_aruco/transformations.py:701 in public function `decompose_matrix`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:787 in public function `compose_matrix`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:839 in public function `orthogonalization_matrix`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:867 in public function `superimposition_matrix`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:867 in public function `superimposition_matrix`: D301: Use r""" if any backslashes in a docstring
[0.900s] ./ros2_aruco/transformations.py:969 in public function `euler_matrix`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1032 in public function `euler_from_matrix`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1090 in public function `euler_from_quaternion`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1101 in public function `quaternion_from_euler`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1158 in public function `quaternion_about_axis`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1175 in public function `quaternion_matrix`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1197 in public function `quaternion_from_matrix`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1229 in public function `quaternion_multiply`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1246 in public function `quaternion_conjugate`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1259 in public function `quaternion_inverse`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1271 in public function `quaternion_slerp`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1312 in public function `random_quaternion`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1342 in public function `random_rotation_matrix`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1357 in public class `Arcball`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1381 in public method `__init__`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1408 in public method `place`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1537 in public function `vector_norm`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1576 in public function `unit_vector`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1620 in public function `random_vector`: D213: Multi-line docstring summary should start at the second line
[0.900s] ./ros2_aruco/transformations.py:1635 in public function `inverse_matrix`: D213: Multi-line docstring summary should start at the second line
[0.901s] ./ros2_aruco/transformations.py:1651 in public function `concatenate_matrices`: D213: Multi-line docstring summary should start at the second line
[0.901s] ./ros2_aruco/transformations.py:1667 in public function `is_same_transform`: D213: Multi-line docstring summary should start at the second line
[0.901s] ./ros2_aruco/transformations.py:1683 in private function `_import_module`: D213: Multi-line docstring summary should start at the second line
[0.901s] checking ./setup.py
[0.901s] checking ./test/test_copyright.py
[0.901s] checking ./test/test_flake8.py
[0.901s] checking ./test/test_pep257.py
[0.901s] checking test/test_copyright.py
[0.901s] checking test/test_flake8.py
[0.901s] checking test/test_pep257.py
[0.901s] 51 errors
[0.901s] - generated xml file: /home/chotu/ros2_ws/src/ENPM_808X_FINAL/build/ros2_aruco/pytest.xml -
[0.901s] =========================== short test summary info ============================
[0.901s] FAILED test/test_copyright.py::test_copyright - AssertionError: Found errors
[0.901s] FAILED test/test_flake8.py::test_flake8 - AssertionError: Found errors
[0.901s] FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...
[0.901s] [31m======================== [31m[1m3 failed[0m, [33m27 warnings[0m[31m in 0.50s[0m[31m ========================[0m
[0.945s] Invoked command in '/home/chotu/ros2_ws/src/ENPM_808X_FINAL/ros2_aruco' returned '1': AMENT_PREFIX_PATH=/home/chotu/ros2_ws/src/ENPM_808X_FINAL/install/ros2_aruco:/home/chotu/ros2_ws/src/ENPM_808X_FINAL/install/tb3:/home/chotu/ros2_ws/src/ENPM_808X_FINAL/install/tutorial_interfaces:/opt/ros/humble PYTEST_ADDOPTS=--tb=short --junit-xml=/home/chotu/ros2_ws/src/ENPM_808X_FINAL/build/ros2_aruco/pytest.xml --junit-prefix=ros2_aruco -o cache_dir=/home/chotu/ros2_ws/src/ENPM_808X_FINAL/build/ros2_aruco/.pytest_cache PYTHONPATH=/home/chotu/ros2_ws/src/ENPM_808X_FINAL/install/ros2_aruco/lib/python3.10/site-packages:/home/chotu/ros2_ws/src/ENPM_808X_FINAL/install/tb3/local/lib/python3.10/dist-packages:/home/chotu/ros2_ws/src/ENPM_808X_FINAL/install/tutorial_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages /usr/bin/python3 -m pytest
